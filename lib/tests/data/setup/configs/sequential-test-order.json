{
  "testSequence": {
    "description": "Sequential integration test execution order to ensure proper data flow",
    "phases": [
      {
        "name": "phase1-external-data-collection",
        "description": "Collect real data from external APIs",
        "tests": [
          "external-apis/CoinGeckoMarketDataReader.test.ts"
        ],
        "purpose": "Establish external data source connectivity and collect fresh data",
        "dataFlow": "External APIs → Test Data Storage",
        "requirements": [
          "CoinGecko MCP API accessible",
          "Network connectivity"
        ]
      },
      {
        "name": "phase2-data-writers",
        "description": "Test all data writers that populate storage systems",
        "tests": [
          "external-apis/RedpandaTargetActor.test.ts",
          "external-apis/TimescaleTargetActor.test.ts",
          "external-apis/TimescaleMCPTargetActor.test.ts"
        ],
        "purpose": "Populate Kafka topics and database tables with test data",
        "dataFlow": "Test Data → Kafka Topics & Database Tables",
        "requirements": [
          "Redpanda cluster running",
          "TimescaleDB running",
          "Data from phase1 available"
        ],
        "dependencies": ["phase1-external-data-collection"]
      },
      {
        "name": "phase3-data-readers",
        "description": "Test all data readers that consume from populated storage",
        "tests": [
          "external-apis/RedpandaSourceActor.test.ts",
          "external-apis/RedpandaMCPSourceActor.test.ts", 
          "external-apis/TimescaleSourceActor.test.ts"
        ],
        "purpose": "Verify data consumption from populated storage systems",
        "dataFlow": "Kafka Topics & Database Tables → Readers",
        "requirements": [
          "Data written by phase2 available",
          "Storage systems accessible"
        ],
        "dependencies": ["phase2-data-writers"]
      },
      {
        "name": "phase4-mcp-launchers",
        "description": "Test MCP server process management",
        "tests": [
          "mcp-servers/redpanda-mcp-launcher.test.ts"
        ],
        "purpose": "Verify MCP server startup and tool availability",
        "dataFlow": "Process Management → MCP Servers",
        "requirements": [
          "rpk binary available",
          "Process spawning permissions"
        ],
        "dependencies": []
      }
    ]
  },
  "executionRules": {
    "sequential": true,
    "failFast": true,
    "setupValidation": {
      "phase1Required": true,
      "phase2Required": true,
      "description": "Both setup phases must complete successfully before any tests run"
    },
    "dataFlowValidation": {
      "validateWritersBeforeReaders": true,
      "validateExternalDataBeforeWrites": true,
      "description": "Ensure data exists before attempting to read it"
    }
  },
  "testConfiguration": {
    "timeout": {
      "setup": 60000,
      "external-apis": 30000,
      "database": 15000,
      "kafka": 20000,
      "mcp-servers": 10000
    },
    "retry": {
      "disabled": true,
      "reason": "Real integration should not retry - fix underlying issues"
    },
    "isolation": {
      "enabled": false,
      "reason": "Sequential tests share data flow state"
    }
  }
}