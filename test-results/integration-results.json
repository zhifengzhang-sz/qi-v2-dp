{
  "numTotalTestSuites": 48,
  "numPassedTestSuites": 34,
  "numFailedTestSuites": 14,
  "numPendingTestSuites": 0,
  "numTotalTests": 86,
  "numPassedTests": 0,
  "numFailedTests": 0,
  "numPendingTests": 86,
  "numTodoTests": 0,
  "snapshot": {
    "added": 0,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0,
    "didUpdate": false
  },
  "startTime": 1752105014899,
  "success": false,
  "testResults": [
    {
      "assertionResults": [],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "Cannot find module '../../../src/actors/sources/coingecko' imported from '/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/CoinGeckoMarketDataReader.test.ts'",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/CoinGeckoMarketDataReader.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "MCP Server Connection"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration MCP Server Connection should connect to Redpanda MCP Server",
          "status": "skipped",
          "title": "should connect to Redpanda MCP Server",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "MCP Server Connection"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration MCP Server Connection should list available MCP tools",
          "status": "skipped",
          "title": "should list available MCP tools",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "MCP Server Connection"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration MCP Server Connection should verify MCP protocol compliance",
          "status": "skipped",
          "title": "should verify MCP protocol compliance",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "MCP-Based Kafka Operations"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration MCP-Based Kafka Operations should list topics via MCP tools",
          "status": "skipped",
          "title": "should list topics via MCP tools",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "MCP-Based Kafka Operations"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration MCP-Based Kafka Operations should consume messages via MCP tools",
          "status": "skipped",
          "title": "should consume messages via MCP tools",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "MCP-Based Kafka Operations"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration MCP-Based Kafka Operations should get consumer group status via MCP",
          "status": "skipped",
          "title": "should get consumer group status via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "DSL Implementation via MCP"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration DSL Implementation via MCP should get current cryptocurrency price via MCP",
          "status": "skipped",
          "title": "should get current cryptocurrency price via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "DSL Implementation via MCP"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration DSL Implementation via MCP should get multiple prices via MCP streaming",
          "status": "skipped",
          "title": "should get multiple prices via MCP streaming",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "DSL Implementation via MCP"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration DSL Implementation via MCP should get market analytics from streaming data",
          "status": "skipped",
          "title": "should get market analytics from streaming data",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "Handler Architecture"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration Handler Architecture should inherit DSL methods from BaseReader",
          "status": "skipped",
          "title": "should inherit DSL methods from BaseReader",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "Handler Architecture"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration Handler Architecture should implement MCP+Kafka-specific handlers",
          "status": "skipped",
          "title": "should implement MCP+Kafka-specific handlers",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "Streaming Performance"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration Streaming Performance should handle real-time message processing",
          "status": "skipped",
          "title": "should handle real-time message processing",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaMCPSourceActor - External Integration",
            "Streaming Performance"
          ],
          "fullName": "RedpandaMCPSourceActor - External Integration Streaming Performance should handle consumer lag monitoring",
          "status": "skipped",
          "title": "should handle consumer lag monitoring",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaMCPSourceActor - External Integration", "Error Handling"],
          "fullName": "RedpandaMCPSourceActor - External Integration Error Handling should handle MCP server unavailable gracefully",
          "status": "skipped",
          "title": "should handle MCP server unavailable gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaMCPSourceActor - External Integration", "Error Handling"],
          "fullName": "RedpandaMCPSourceActor - External Integration Error Handling should handle invalid MCP tool calls",
          "status": "skipped",
          "title": "should handle invalid MCP tool calls",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaMCPSourceActor - External Integration", "Error Handling"],
          "fullName": "RedpandaMCPSourceActor - External Integration Error Handling should handle Kafka cluster disconnection",
          "status": "skipped",
          "title": "should handle Kafka cluster disconnection",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/RedpandaMCPSourceActor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RedpandaSourceActor - External Integration",
            "Kafka Cluster Connection"
          ],
          "fullName": "RedpandaSourceActor - External Integration Kafka Cluster Connection should connect to Redpanda Kafka cluster",
          "status": "skipped",
          "title": "should connect to Redpanda Kafka cluster",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaSourceActor - External Integration",
            "Kafka Cluster Connection"
          ],
          "fullName": "RedpandaSourceActor - External Integration Kafka Cluster Connection should list available topics",
          "status": "skipped",
          "title": "should list available topics",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaSourceActor - External Integration",
            "Market Data Consumption"
          ],
          "fullName": "RedpandaSourceActor - External Integration Market Data Consumption should consume cryptocurrency price messages",
          "status": "skipped",
          "title": "should consume cryptocurrency price messages",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaSourceActor - External Integration",
            "Market Data Consumption"
          ],
          "fullName": "RedpandaSourceActor - External Integration Market Data Consumption should handle consumer group management",
          "status": "skipped",
          "title": "should handle consumer group management",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaSourceActor - External Integration",
            "Streaming Architecture"
          ],
          "fullName": "RedpandaSourceActor - External Integration Streaming Architecture should implement streaming DSL methods",
          "status": "skipped",
          "title": "should implement streaming DSL methods",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaSourceActor - External Integration",
            "Streaming Architecture"
          ],
          "fullName": "RedpandaSourceActor - External Integration Streaming Architecture should handle real-time message consumption",
          "status": "skipped",
          "title": "should handle real-time message consumption",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaSourceActor - External Integration", "Handler Architecture"],
          "fullName": "RedpandaSourceActor - External Integration Handler Architecture should inherit DSL methods from BaseReader",
          "status": "skipped",
          "title": "should inherit DSL methods from BaseReader",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaSourceActor - External Integration", "Handler Architecture"],
          "fullName": "RedpandaSourceActor - External Integration Handler Architecture should implement Kafka-specific handlers only",
          "status": "skipped",
          "title": "should implement Kafka-specific handlers only",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaSourceActor - External Integration", "Error Handling"],
          "fullName": "RedpandaSourceActor - External Integration Error Handling should handle broker unavailable gracefully",
          "status": "skipped",
          "title": "should handle broker unavailable gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaSourceActor - External Integration", "Error Handling"],
          "fullName": "RedpandaSourceActor - External Integration Error Handling should handle authentication failures",
          "status": "skipped",
          "title": "should handle authentication failures",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/RedpandaSourceActor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Kafka Producer Connection"
          ],
          "fullName": "RedpandaTargetActor - External Integration Kafka Producer Connection should connect to Redpanda Kafka cluster as producer",
          "status": "skipped",
          "title": "should connect to Redpanda Kafka cluster as producer",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Kafka Producer Connection"
          ],
          "fullName": "RedpandaTargetActor - External Integration Kafka Producer Connection should verify topic availability for publishing",
          "status": "skipped",
          "title": "should verify topic availability for publishing",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Market Data Publishing"
          ],
          "fullName": "RedpandaTargetActor - External Integration Market Data Publishing should publish cryptocurrency price data",
          "status": "skipped",
          "title": "should publish cryptocurrency price data",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Market Data Publishing"
          ],
          "fullName": "RedpandaTargetActor - External Integration Market Data Publishing should publish batch market analytics",
          "status": "skipped",
          "title": "should publish batch market analytics",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Market Data Publishing"
          ],
          "fullName": "RedpandaTargetActor - External Integration Market Data Publishing should handle batch publishing with proper partitioning",
          "status": "skipped",
          "title": "should handle batch publishing with proper partitioning",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Streaming Architecture"
          ],
          "fullName": "RedpandaTargetActor - External Integration Streaming Architecture should implement streaming DSL methods",
          "status": "skipped",
          "title": "should implement streaming DSL methods",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RedpandaTargetActor - External Integration",
            "Streaming Architecture"
          ],
          "fullName": "RedpandaTargetActor - External Integration Streaming Architecture should handle producer batching and flushing",
          "status": "skipped",
          "title": "should handle producer batching and flushing",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaTargetActor - External Integration", "Handler Architecture"],
          "fullName": "RedpandaTargetActor - External Integration Handler Architecture should inherit DSL methods from BaseWriter",
          "status": "skipped",
          "title": "should inherit DSL methods from BaseWriter",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaTargetActor - External Integration", "Handler Architecture"],
          "fullName": "RedpandaTargetActor - External Integration Handler Architecture should implement Kafka-specific handlers only",
          "status": "skipped",
          "title": "should implement Kafka-specific handlers only",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaTargetActor - External Integration", "Error Handling"],
          "fullName": "RedpandaTargetActor - External Integration Error Handling should handle broker unavailable gracefully",
          "status": "skipped",
          "title": "should handle broker unavailable gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaTargetActor - External Integration", "Error Handling"],
          "fullName": "RedpandaTargetActor - External Integration Error Handling should handle schema validation failures",
          "status": "skipped",
          "title": "should handle schema validation failures",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["RedpandaTargetActor - External Integration", "Error Handling"],
          "fullName": "RedpandaTargetActor - External Integration Error Handling should handle topic permission errors",
          "status": "skipped",
          "title": "should handle topic permission errors",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/RedpandaTargetActor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "MCP Server Connection"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration MCP Server Connection should connect to TimescaleDB MCP Server",
          "status": "skipped",
          "title": "should connect to TimescaleDB MCP Server",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "MCP Server Connection"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration MCP Server Connection should list available MCP tools",
          "status": "skipped",
          "title": "should list available MCP tools",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "MCP Server Connection"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration MCP Server Connection should verify MCP protocol compliance",
          "status": "skipped",
          "title": "should verify MCP protocol compliance",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "MCP-Based Database Operations"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration MCP-Based Database Operations should create hypertables via MCP tools",
          "status": "skipped",
          "title": "should create hypertables via MCP tools",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "MCP-Based Database Operations"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration MCP-Based Database Operations should verify database connection via MCP",
          "status": "skipped",
          "title": "should verify database connection via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "MCP-Based Database Operations"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration MCP-Based Database Operations should list existing hypertables via MCP",
          "status": "skipped",
          "title": "should list existing hypertables via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "DSL Implementation via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration DSL Implementation via MCP should publish cryptocurrency price data via MCP",
          "status": "skipped",
          "title": "should publish cryptocurrency price data via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "DSL Implementation via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration DSL Implementation via MCP should publish OHLCV data via MCP tools",
          "status": "skipped",
          "title": "should publish OHLCV data via MCP tools",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "DSL Implementation via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration DSL Implementation via MCP should publish market analytics via MCP",
          "status": "skipped",
          "title": "should publish market analytics via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "TimescaleDB Features via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration TimescaleDB Features via MCP should create continuous aggregates via MCP",
          "status": "skipped",
          "title": "should create continuous aggregates via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "TimescaleDB Features via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration TimescaleDB Features via MCP should manage compression policies via MCP",
          "status": "skipped",
          "title": "should manage compression policies via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "TimescaleDB Features via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration TimescaleDB Features via MCP should manage retention policies via MCP",
          "status": "skipped",
          "title": "should manage retention policies via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "Handler Architecture"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration Handler Architecture should inherit DSL methods from BaseWriter",
          "status": "skipped",
          "title": "should inherit DSL methods from BaseWriter",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "Handler Architecture"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration Handler Architecture should implement MCP+TimescaleDB-specific handlers",
          "status": "skipped",
          "title": "should implement MCP+TimescaleDB-specific handlers",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "Batch Processing via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration Batch Processing via MCP should handle batch insertions via MCP",
          "status": "skipped",
          "title": "should handle batch insertions via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleMCPTargetActor - External Integration",
            "Batch Processing via MCP"
          ],
          "fullName": "TimescaleMCPTargetActor - External Integration Batch Processing via MCP should handle transaction batching via MCP",
          "status": "skipped",
          "title": "should handle transaction batching via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleMCPTargetActor - External Integration", "Error Handling"],
          "fullName": "TimescaleMCPTargetActor - External Integration Error Handling should handle MCP server unavailable gracefully",
          "status": "skipped",
          "title": "should handle MCP server unavailable gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleMCPTargetActor - External Integration", "Error Handling"],
          "fullName": "TimescaleMCPTargetActor - External Integration Error Handling should handle database constraint violations via MCP",
          "status": "skipped",
          "title": "should handle database constraint violations via MCP",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleMCPTargetActor - External Integration", "Error Handling"],
          "fullName": "TimescaleMCPTargetActor - External Integration Error Handling should handle MCP tool call failures",
          "status": "skipped",
          "title": "should handle MCP tool call failures",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/TimescaleMCPTargetActor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Database Connection"],
          "fullName": "TimescaleSourceActor - External Integration Database Connection should connect to TimescaleDB instance for reading",
          "status": "skipped",
          "title": "should connect to TimescaleDB instance for reading",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Database Connection"],
          "fullName": "TimescaleSourceActor - External Integration Database Connection should verify read access to hypertables",
          "status": "skipped",
          "title": "should verify read access to hypertables",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Historical Data Queries"
          ],
          "fullName": "TimescaleSourceActor - External Integration Historical Data Queries should read current cryptocurrency prices from TimescaleDB",
          "status": "skipped",
          "title": "should read current cryptocurrency prices from TimescaleDB",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Historical Data Queries"
          ],
          "fullName": "TimescaleSourceActor - External Integration Historical Data Queries should query price history with time ranges",
          "status": "skipped",
          "title": "should query price history with time ranges",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Historical Data Queries"
          ],
          "fullName": "TimescaleSourceActor - External Integration Historical Data Queries should query OHLCV data with time aggregations",
          "status": "skipped",
          "title": "should query OHLCV data with time aggregations",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Time-Series Analytics"
          ],
          "fullName": "TimescaleSourceActor - External Integration Time-Series Analytics should perform time-bucket aggregations",
          "status": "skipped",
          "title": "should perform time-bucket aggregations",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Time-Series Analytics"
          ],
          "fullName": "TimescaleSourceActor - External Integration Time-Series Analytics should query market analytics historical data",
          "status": "skipped",
          "title": "should query market analytics historical data",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Time-Series Analytics"
          ],
          "fullName": "TimescaleSourceActor - External Integration Time-Series Analytics should support materialized view queries",
          "status": "skipped",
          "title": "should support materialized view queries",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Handler Architecture"],
          "fullName": "TimescaleSourceActor - External Integration Handler Architecture should inherit DSL methods from BaseReader",
          "status": "skipped",
          "title": "should inherit DSL methods from BaseReader",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Handler Architecture"],
          "fullName": "TimescaleSourceActor - External Integration Handler Architecture should implement TimescaleDB-specific handlers",
          "status": "skipped",
          "title": "should implement TimescaleDB-specific handlers",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Performance Optimization"
          ],
          "fullName": "TimescaleSourceActor - External Integration Performance Optimization should use connection pooling",
          "status": "skipped",
          "title": "should use connection pooling",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleSourceActor - External Integration",
            "Performance Optimization"
          ],
          "fullName": "TimescaleSourceActor - External Integration Performance Optimization should implement query result caching",
          "status": "skipped",
          "title": "should implement query result caching",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Error Handling"],
          "fullName": "TimescaleSourceActor - External Integration Error Handling should handle database unavailable gracefully",
          "status": "skipped",
          "title": "should handle database unavailable gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Error Handling"],
          "fullName": "TimescaleSourceActor - External Integration Error Handling should handle empty result sets gracefully",
          "status": "skipped",
          "title": "should handle empty result sets gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleSourceActor - External Integration", "Error Handling"],
          "fullName": "TimescaleSourceActor - External Integration Error Handling should handle query timeout gracefully",
          "status": "skipped",
          "title": "should handle query timeout gracefully",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/TimescaleSourceActor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Database Connection"],
          "fullName": "TimescaleTargetActor - External Integration Database Connection should connect to TimescaleDB instance",
          "status": "skipped",
          "title": "should connect to TimescaleDB instance",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Database Connection"],
          "fullName": "TimescaleTargetActor - External Integration Database Connection should verify hypertables exist",
          "status": "skipped",
          "title": "should verify hypertables exist",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Database Connection"],
          "fullName": "TimescaleTargetActor - External Integration Database Connection should verify TimescaleDB extensions",
          "status": "skipped",
          "title": "should verify TimescaleDB extensions",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleTargetActor - External Integration",
            "Time-Series Data Storage"
          ],
          "fullName": "TimescaleTargetActor - External Integration Time-Series Data Storage should store cryptocurrency price data",
          "status": "skipped",
          "title": "should store cryptocurrency price data",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleTargetActor - External Integration",
            "Time-Series Data Storage"
          ],
          "fullName": "TimescaleTargetActor - External Integration Time-Series Data Storage should store OHLCV time-series data",
          "status": "skipped",
          "title": "should store OHLCV time-series data",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TimescaleTargetActor - External Integration",
            "Time-Series Data Storage"
          ],
          "fullName": "TimescaleTargetActor - External Integration Time-Series Data Storage should handle time-series queries and aggregations",
          "status": "skipped",
          "title": "should handle time-series queries and aggregations",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "TimescaleDB Features"],
          "fullName": "TimescaleTargetActor - External Integration TimescaleDB Features should implement time partitioning",
          "status": "skipped",
          "title": "should implement time partitioning",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "TimescaleDB Features"],
          "fullName": "TimescaleTargetActor - External Integration TimescaleDB Features should support compression policies",
          "status": "skipped",
          "title": "should support compression policies",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "TimescaleDB Features"],
          "fullName": "TimescaleTargetActor - External Integration TimescaleDB Features should handle retention policies",
          "status": "skipped",
          "title": "should handle retention policies",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Handler Architecture"],
          "fullName": "TimescaleTargetActor - External Integration Handler Architecture should inherit DSL methods from BaseWriter",
          "status": "skipped",
          "title": "should inherit DSL methods from BaseWriter",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Handler Architecture"],
          "fullName": "TimescaleTargetActor - External Integration Handler Architecture should implement TimescaleDB-specific handlers",
          "status": "skipped",
          "title": "should implement TimescaleDB-specific handlers",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Error Handling"],
          "fullName": "TimescaleTargetActor - External Integration Error Handling should handle database unavailable gracefully",
          "status": "skipped",
          "title": "should handle database unavailable gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Error Handling"],
          "fullName": "TimescaleTargetActor - External Integration Error Handling should handle schema validation failures",
          "status": "skipped",
          "title": "should handle schema validation failures",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TimescaleTargetActor - External Integration", "Error Handling"],
          "fullName": "TimescaleTargetActor - External Integration Error Handling should handle permission errors",
          "status": "skipped",
          "title": "should handle permission errors",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/external-apis/TimescaleTargetActor.test.ts"
    },
    {
      "assertionResults": [],
      "startTime": 1752105014899,
      "endTime": 1752105014899,
      "status": "failed",
      "message": "Cannot find module '../../../src/base/streaming/redpanda/redpanda-mcp-launcher' imported from '/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/mcp-servers/redpanda-mcp-launcher.test.ts'",
      "name": "/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/integration/mcp-servers/redpanda-mcp-launcher.test.ts"
    }
  ]
}
