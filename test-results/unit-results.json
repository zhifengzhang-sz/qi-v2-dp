{"numTotalTestSuites":35,"numPassedTestSuites":35,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":51,"numPassedTests":51,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752111354852,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have DSL interfaces","status":"passed","title":"should have DSL interfaces","duration":6.405962000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have DSL data classes","status":"passed","title":"should have DSL data classes","duration":1.1610719999999901,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have CoinGecko MCP Reader implementation","status":"passed","title":"should have CoinGecko MCP Reader implementation","duration":8.315070999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have Result type system","status":"passed","title":"should have Result type system","duration":25.278910999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should create data classes successfully","status":"passed","title":"should create data classes successfully","duration":0.44584499999996297,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have proper Result type integration","status":"passed","title":"should have proper Result type integration","duration":0.38665800000001127,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should verify DSL utilities work","status":"passed","title":"should verify DSL utilities work","duration":0.6734450000000152,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should verify data class immutability","status":"passed","title":"should verify data class immutability","duration":0.45287700000000086,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should verify FP actors are available","status":"passed","title":"should verify FP actors are available","duration":12.690439999999967,"failureMessages":[],"meta":{}}],"startTime":1752111355092,"endTime":1752111355148.6904,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/basic-architecture.test.ts"},{"assertionResults":[{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create Price with factory method","status":"passed","title":"should create Price with factory method","duration":0.7356029999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create OHLCV with factory method","status":"passed","title":"should create OHLCV with factory method","duration":0.2571350000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create MarketSymbol with factory method","status":"passed","title":"should create MarketSymbol with factory method","duration":0.1342069999999751,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create MarketContext with factory method","status":"passed","title":"should create MarketContext with factory method","duration":0.07784300000000144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should read price data using new interface","status":"passed","title":"should read price data using new interface","duration":0.08850800000001868,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should read OHLCV data using new interface","status":"passed","title":"should read OHLCV data using new interface","duration":0.18528399999999579,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should handle unsupported operations gracefully","status":"passed","title":"should handle unsupported operations gracefully","duration":0.21127200000000812,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should read historical data","status":"passed","title":"should read historical data","duration":0.17775499999999056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Time Interval Utilities"],"fullName":"Market Data DSL Time Interval Utilities should create time intervals","status":"passed","title":"should create time intervals","duration":0.16184800000002042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Type Safety"],"fullName":"Market Data DSL Type Safety should maintain immutable data structures","status":"passed","title":"should maintain immutable data structures","duration":0.09724100000002522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Type Safety"],"fullName":"Market Data DSL Type Safety should provide correct data structures","status":"passed","title":"should provide correct data structures","duration":0.170125999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Error Handling"],"fullName":"Market Data DSL Error Handling should handle capability limitations gracefully","status":"passed","title":"should handle capability limitations gracefully","duration":0.09147100000001274,"failureMessages":[],"meta":{}}],"startTime":1752111355108,"endTime":1752111355111.1702,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/dsl/FPMarketDataDSL.test.ts"},{"assertionResults":[{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrice"],"fullName":"MarketDataReadingDSL Interface getCurrentPrice should return current price for a cryptocurrency","status":"passed","title":"should return current price for a cryptocurrency","duration":0.6143209999999613,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrice"],"fullName":"MarketDataReadingDSL Interface getCurrentPrice should use USD as default currency","status":"passed","title":"should use USD as default currency","duration":0.07819799999998622,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrices"],"fullName":"MarketDataReadingDSL Interface getCurrentPrices should return prices for multiple cryptocurrencies","status":"passed","title":"should return prices for multiple cryptocurrencies","duration":0.2811320000000137,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrices"],"fullName":"MarketDataReadingDSL Interface getCurrentPrices should handle options parameter","status":"passed","title":"should handle options parameter","duration":0.0760450000000219,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentOHLCV"],"fullName":"MarketDataReadingDSL Interface getCurrentOHLCV should return OHLCV data for a cryptocurrency","status":"passed","title":"should return OHLCV data for a cryptocurrency","duration":0.23984100000001263,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentOHLCV"],"fullName":"MarketDataReadingDSL Interface getCurrentOHLCV should default to daily interval","status":"passed","title":"should default to daily interval","duration":0.062221000000022286,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getLatestOHLCV"],"fullName":"MarketDataReadingDSL Interface getLatestOHLCV should return multiple OHLCV candles","status":"passed","title":"should return multiple OHLCV candles","duration":0.08440899999999374,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getLatestOHLCV"],"fullName":"MarketDataReadingDSL Interface getLatestOHLCV should default to 10 candles and daily interval","status":"passed","title":"should default to 10 candles and daily interval","duration":0.06805300000002035,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getPriceHistory"],"fullName":"MarketDataReadingDSL Interface getPriceHistory should return price history for date range","status":"passed","title":"should return price history for date range","duration":0.16670399999998153,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getOHLCVByDateRange"],"fullName":"MarketDataReadingDSL Interface getOHLCVByDateRange should return OHLCV data for date range","status":"passed","title":"should return OHLCV data for date range","duration":0.07886200000001509,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getAvailableTickers"],"fullName":"MarketDataReadingDSL Interface getAvailableTickers should return available cryptocurrency tickers","status":"passed","title":"should return available cryptocurrency tickers","duration":0.0752289999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getAvailableTickers"],"fullName":"MarketDataReadingDSL Interface getAvailableTickers should default to 100 tickers","status":"passed","title":"should default to 100 tickers","duration":0.03441200000003164,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getLevel1Data"],"fullName":"MarketDataReadingDSL Interface getLevel1Data should return Level 1 market data","status":"passed","title":"should return Level 1 market data","duration":0.11965600000002041,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getMarketAnalytics"],"fullName":"MarketDataReadingDSL Interface getMarketAnalytics should return global market analytics","status":"passed","title":"should return global market analytics","duration":0.1393419999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","Result<T> Pattern Compliance"],"fullName":"MarketDataReadingDSL Interface Result<T> Pattern Compliance should return Result<T> from all methods","status":"passed","title":"should return Result<T> from all methods","duration":0.777575000000013,"failureMessages":[],"meta":{}}],"startTime":1752111355136,"endTime":1752111355139.7776,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/dsl/MarketDataReadingDSL.test.ts"},{"assertionResults":[{"ancestorTitles":["MarketDataWritingDSL Interface","publishPrice"],"fullName":"MarketDataWritingDSL Interface publishPrice should publish single cryptocurrency price","status":"passed","title":"should publish single cryptocurrency price","duration":0.8141919999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishPrices"],"fullName":"MarketDataWritingDSL Interface publishPrices should publish multiple cryptocurrency prices","status":"passed","title":"should publish multiple cryptocurrency prices","duration":0.24561299999999164,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishPrices"],"fullName":"MarketDataWritingDSL Interface publishPrices should handle empty array","status":"passed","title":"should handle empty array","duration":0.059429000000022825,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishOHLCV"],"fullName":"MarketDataWritingDSL Interface publishOHLCV should publish single OHLCV data","status":"passed","title":"should publish single OHLCV data","duration":0.08365500000002157,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishOHLCVBatch"],"fullName":"MarketDataWritingDSL Interface publishOHLCVBatch should publish multiple OHLCV data","status":"passed","title":"should publish multiple OHLCV data","duration":0.08366000000000895,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishMarketAnalytics"],"fullName":"MarketDataWritingDSL Interface publishMarketAnalytics should publish market analytics data","status":"passed","title":"should publish market analytics data","duration":0.08282500000001392,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishLevel1Data"],"fullName":"MarketDataWritingDSL Interface publishLevel1Data should publish Level 1 market data","status":"passed","title":"should publish Level 1 market data","duration":0.08190100000001621,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishPriceHistory"],"fullName":"MarketDataWritingDSL Interface publishPriceHistory should publish price history data","status":"passed","title":"should publish price history data","duration":0.08456899999998768,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishCustomData"],"fullName":"MarketDataWritingDSL Interface publishCustomData should publish custom data without schema","status":"passed","title":"should publish custom data without schema","duration":0.10226799999998093,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishCustomData"],"fullName":"MarketDataWritingDSL Interface publishCustomData should publish custom data with schema","status":"passed","title":"should publish custom data with schema","duration":0.05721099999999524,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishBatch"],"fullName":"MarketDataWritingDSL Interface publishBatch should publish mixed batch data","status":"passed","title":"should publish mixed batch data","duration":0.060421000000019376,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","flush"],"fullName":"MarketDataWritingDSL Interface flush should flush pending data","status":"passed","title":"should flush pending data","duration":0.04382599999996728,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","Result<T> Pattern Compliance"],"fullName":"MarketDataWritingDSL Interface Result<T> Pattern Compliance should return Result<T> from all methods","status":"passed","title":"should return Result<T> from all methods","duration":0.7577609999999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","Data Validation"],"fullName":"MarketDataWritingDSL Interface Data Validation should handle required fields in CryptoPriceData","status":"passed","title":"should handle required fields in CryptoPriceData","duration":0.08543199999996887,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","Data Validation"],"fullName":"MarketDataWritingDSL Interface Data Validation should handle required fields in CryptoOHLCVData","status":"passed","title":"should handle required fields in CryptoOHLCVData","duration":0.042788000000030024,"failureMessages":[],"meta":{}}],"startTime":1752111355135,"endTime":1752111355138.7578,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/dsl/MarketDataWritingDSL.test.ts"}]}