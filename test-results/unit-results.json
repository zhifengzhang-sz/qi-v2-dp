{"numTotalTestSuites":35,"numPassedTestSuites":35,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":51,"numPassedTests":51,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752132325584,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have DSL interfaces","status":"passed","title":"should have DSL interfaces","duration":5.78466899999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have DSL data classes","status":"passed","title":"should have DSL data classes","duration":1.0687670000000082,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have CoinGecko MCP Reader implementation","status":"passed","title":"should have CoinGecko MCP Reader implementation","duration":9.01890400000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have Result type system","status":"passed","title":"should have Result type system","duration":22.458377999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should create data classes successfully","status":"passed","title":"should create data classes successfully","duration":0.22409199999998464,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should have proper Result type integration","status":"passed","title":"should have proper Result type integration","duration":0.20984400000000392,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should verify DSL utilities work","status":"passed","title":"should verify DSL utilities work","duration":1.0564829999999859,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should verify data class immutability","status":"passed","title":"should verify data class immutability","duration":0.3843169999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["QiCore FP System Architecture"],"fullName":"QiCore FP System Architecture should verify FP actors are available","status":"passed","title":"should verify FP actors are available","duration":11.56909300000001,"failureMessages":[],"meta":{}}],"startTime":1752132325787,"endTime":1752132325838.569,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/basic-architecture.test.ts"},{"assertionResults":[{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create Price with factory method","status":"passed","title":"should create Price with factory method","duration":0.7416760000000124,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create OHLCV with factory method","status":"passed","title":"should create OHLCV with factory method","duration":0.24111099999998942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create MarketSymbol with factory method","status":"passed","title":"should create MarketSymbol with factory method","duration":0.13444599999999696,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Data Class Creation"],"fullName":"Market Data DSL Data Class Creation should create MarketContext with factory method","status":"passed","title":"should create MarketContext with factory method","duration":0.09337099999999054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should read price data using new interface","status":"passed","title":"should read price data using new interface","duration":0.12222599999998351,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should read OHLCV data using new interface","status":"passed","title":"should read OHLCV data using new interface","duration":0.1293139999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should handle unsupported operations gracefully","status":"passed","title":"should handle unsupported operations gracefully","duration":0.19823499999998262,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Reader Interface Implementation"],"fullName":"Market Data DSL Reader Interface Implementation should read historical data","status":"passed","title":"should read historical data","duration":0.17282400000001985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Time Interval Utilities"],"fullName":"Market Data DSL Time Interval Utilities should create time intervals","status":"passed","title":"should create time intervals","duration":0.13934400000002256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Type Safety"],"fullName":"Market Data DSL Type Safety should maintain immutable data structures","status":"passed","title":"should maintain immutable data structures","duration":0.07530800000000681,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Type Safety"],"fullName":"Market Data DSL Type Safety should provide correct data structures","status":"passed","title":"should provide correct data structures","duration":0.16630100000000425,"failureMessages":[],"meta":{}},{"ancestorTitles":["Market Data DSL","Error Handling"],"fullName":"Market Data DSL Error Handling should handle capability limitations gracefully","status":"passed","title":"should handle capability limitations gracefully","duration":0.11147199999999202,"failureMessages":[],"meta":{}}],"startTime":1752132325805,"endTime":1752132325808.1663,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/dsl/FPMarketDataDSL.test.ts"},{"assertionResults":[{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrice"],"fullName":"MarketDataReadingDSL Interface getCurrentPrice should return current price for a cryptocurrency","status":"passed","title":"should return current price for a cryptocurrency","duration":0.5798849999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrice"],"fullName":"MarketDataReadingDSL Interface getCurrentPrice should use USD as default currency","status":"passed","title":"should use USD as default currency","duration":0.07038399999999001,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrices"],"fullName":"MarketDataReadingDSL Interface getCurrentPrices should return prices for multiple cryptocurrencies","status":"passed","title":"should return prices for multiple cryptocurrencies","duration":0.29546599999997625,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentPrices"],"fullName":"MarketDataReadingDSL Interface getCurrentPrices should handle options parameter","status":"passed","title":"should handle options parameter","duration":0.06818899999998962,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentOHLCV"],"fullName":"MarketDataReadingDSL Interface getCurrentOHLCV should return OHLCV data for a cryptocurrency","status":"passed","title":"should return OHLCV data for a cryptocurrency","duration":0.22993600000000924,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getCurrentOHLCV"],"fullName":"MarketDataReadingDSL Interface getCurrentOHLCV should default to daily interval","status":"passed","title":"should default to daily interval","duration":0.0703980000000115,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getLatestOHLCV"],"fullName":"MarketDataReadingDSL Interface getLatestOHLCV should return multiple OHLCV candles","status":"passed","title":"should return multiple OHLCV candles","duration":0.08677699999998367,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getLatestOHLCV"],"fullName":"MarketDataReadingDSL Interface getLatestOHLCV should default to 10 candles and daily interval","status":"passed","title":"should default to 10 candles and daily interval","duration":0.06624199999998837,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getPriceHistory"],"fullName":"MarketDataReadingDSL Interface getPriceHistory should return price history for date range","status":"passed","title":"should return price history for date range","duration":0.16358400000001438,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getOHLCVByDateRange"],"fullName":"MarketDataReadingDSL Interface getOHLCVByDateRange should return OHLCV data for date range","status":"passed","title":"should return OHLCV data for date range","duration":0.07451900000000933,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getAvailableTickers"],"fullName":"MarketDataReadingDSL Interface getAvailableTickers should return available cryptocurrency tickers","status":"passed","title":"should return available cryptocurrency tickers","duration":0.06886900000000651,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getAvailableTickers"],"fullName":"MarketDataReadingDSL Interface getAvailableTickers should default to 100 tickers","status":"passed","title":"should default to 100 tickers","duration":0.030470000000008213,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getLevel1Data"],"fullName":"MarketDataReadingDSL Interface getLevel1Data should return Level 1 market data","status":"passed","title":"should return Level 1 market data","duration":0.11773900000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","getMarketAnalytics"],"fullName":"MarketDataReadingDSL Interface getMarketAnalytics should return global market analytics","status":"passed","title":"should return global market analytics","duration":0.14031200000002286,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataReadingDSL Interface","Result<T> Pattern Compliance"],"fullName":"MarketDataReadingDSL Interface Result<T> Pattern Compliance should return Result<T> from all methods","status":"passed","title":"should return Result<T> from all methods","duration":0.7074029999999993,"failureMessages":[],"meta":{}}],"startTime":1752132325828,"endTime":1752132325830.7075,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/dsl/MarketDataReadingDSL.test.ts"},{"assertionResults":[{"ancestorTitles":["MarketDataWritingDSL Interface","publishPrice"],"fullName":"MarketDataWritingDSL Interface publishPrice should publish single cryptocurrency price","status":"passed","title":"should publish single cryptocurrency price","duration":0.9002030000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishPrices"],"fullName":"MarketDataWritingDSL Interface publishPrices should publish multiple cryptocurrency prices","status":"passed","title":"should publish multiple cryptocurrency prices","duration":0.6126280000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishPrices"],"fullName":"MarketDataWritingDSL Interface publishPrices should handle empty array","status":"passed","title":"should handle empty array","duration":0.07036999999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishOHLCV"],"fullName":"MarketDataWritingDSL Interface publishOHLCV should publish single OHLCV data","status":"passed","title":"should publish single OHLCV data","duration":0.1139400000000137,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishOHLCVBatch"],"fullName":"MarketDataWritingDSL Interface publishOHLCVBatch should publish multiple OHLCV data","status":"passed","title":"should publish multiple OHLCV data","duration":0.10838699999999335,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishMarketAnalytics"],"fullName":"MarketDataWritingDSL Interface publishMarketAnalytics should publish market analytics data","status":"passed","title":"should publish market analytics data","duration":0.11104500000001849,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishLevel1Data"],"fullName":"MarketDataWritingDSL Interface publishLevel1Data should publish Level 1 market data","status":"passed","title":"should publish Level 1 market data","duration":0.0932200000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishPriceHistory"],"fullName":"MarketDataWritingDSL Interface publishPriceHistory should publish price history data","status":"passed","title":"should publish price history data","duration":0.10433199999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishCustomData"],"fullName":"MarketDataWritingDSL Interface publishCustomData should publish custom data without schema","status":"passed","title":"should publish custom data without schema","duration":0.10311399999997661,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishCustomData"],"fullName":"MarketDataWritingDSL Interface publishCustomData should publish custom data with schema","status":"passed","title":"should publish custom data with schema","duration":0.08779700000002322,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","publishBatch"],"fullName":"MarketDataWritingDSL Interface publishBatch should publish mixed batch data","status":"passed","title":"should publish mixed batch data","duration":0.06752699999998413,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","flush"],"fullName":"MarketDataWritingDSL Interface flush should flush pending data","status":"passed","title":"should flush pending data","duration":0.04818500000001791,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","Result<T> Pattern Compliance"],"fullName":"MarketDataWritingDSL Interface Result<T> Pattern Compliance should return Result<T> from all methods","status":"passed","title":"should return Result<T> from all methods","duration":0.978350000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","Data Validation"],"fullName":"MarketDataWritingDSL Interface Data Validation should handle required fields in CryptoPriceData","status":"passed","title":"should handle required fields in CryptoPriceData","duration":0.07427300000000514,"failureMessages":[],"meta":{}},{"ancestorTitles":["MarketDataWritingDSL Interface","Data Validation"],"fullName":"MarketDataWritingDSL Interface Data Validation should handle required fields in CryptoOHLCVData","status":"passed","title":"should handle required fields in CryptoOHLCVData","duration":0.053239999999988186,"failureMessages":[],"meta":{}}],"startTime":1752132325830,"endTime":1752132325834.0742,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/qi-v2-dp-ts-actor/lib/tests/unit/dsl/MarketDataWritingDSL.test.ts"}]}